# Generated by Django 4.2.7 on 2023-11-13 01:32

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row', models.PositiveIntegerField(verbose_name='строка в сетке')),
                ('column', models.PositiveIntegerField(verbose_name='столбец в сетке')),
                ('blocked', models.BooleanField(default=False, verbose_name='Заблокированный блок?')),
                ('towers_blocked', models.BooleanField(default=False, verbose_name='Занят вышкой?')),
                ('covered_with_a_tower', models.BooleanField(default=False, verbose_name='покрыт вышкой?')),
                ('start_communication_unit', models.BooleanField(default=False, verbose_name='блок связи?')),
                ('end_communication_unit', models.BooleanField(default=False, verbose_name='блок связи?')),
            ],
            options={
                'verbose_name': 'Блок',
                'verbose_name_plural': 'Блоки',
                'ordering': ('row', 'column'),
            },
        ),
        migrations.CreateModel(
            name='BlockTowerCoverage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='city_grid.block')),
            ],
        ),
        migrations.CreateModel(
            name='CityGrid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rows', models.IntegerField(validators=[django.core.validators.MinValueValidator(1, 'Значение не может быть меньше 1')], verbose_name='кол-во строк в сетке')),
                ('columns', models.IntegerField(validators=[django.core.validators.MinValueValidator(1, 'Значение не может быть меньше 1')], verbose_name='кол-во столбцов в сетке')),
                ('coverage_threshold', models.PositiveIntegerField(default=30, help_text='\n        Пожалуйста укажите максимальный процент загороженности вашей сетки\n        ', verbose_name='Максимальный % покрытия')),
                ('auto_place_towers', models.BooleanField(default=False, help_text='Установите флажок, если хотите, чтобы вышки расставлялись автоматически.', verbose_name='Автоматическая расстановка вышек')),
            ],
            options={
                'verbose_name': 'Городская сетка',
                'verbose_name_plural': 'Городские сетки',
            },
        ),
        migrations.CreateModel(
            name='Tower',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('radius', models.PositiveIntegerField(choices=[(1, 'Радиус 1'), (2, 'Радиус 2'), (3, 'Радиус 3')], help_text='Пожалуйста, выберите радиус охвата для этой вышки', verbose_name='Радиус вышки')),
                ('block_for_tower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='city_grid.block', verbose_name='блок для установки вышки')),
            ],
            options={
                'verbose_name': 'Вышка',
                'verbose_name_plural': 'Вышки',
            },
        ),
        migrations.CreateModel(
            name='TowerCoverage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('block_for_tower', models.ForeignKey(help_text='\n        Пожалуйста выберите блок для установки вышки из списка свободных блоков\n        ', on_delete=django.db.models.deletion.CASCADE, related_name='block_for_tower', to='city_grid.block', verbose_name='Выберите блок для установки вышки')),
                ('city_grid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='city_grid.citygrid')),
                ('covered_blocks', models.ManyToManyField(blank=True, through='city_grid.BlockTowerCoverage', to='city_grid.block')),
                ('tower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='city_grid.tower', verbose_name='Выберите вышку')),
            ],
            options={
                'verbose_name': 'Размещение вышки',
                'verbose_name_plural': 'Размещение вышек',
            },
        ),
        migrations.CreateModel(
            name='TowerConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_grid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='city_grid.citygrid')),
                ('source_tower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_connections', to='city_grid.tower', verbose_name='Исходная вышка')),
                ('target_tower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target_connections', to='city_grid.tower', verbose_name='Целевая вышка')),
            ],
            options={
                'verbose_name': 'Связь между вышками',
                'verbose_name_plural': 'Связи между вышками',
            },
        ),
        migrations.AddField(
            model_name='citygrid',
            name='towers',
            field=models.ManyToManyField(blank=True, related_name='citygrid', to='city_grid.tower', verbose_name='Вышки которые были размещены на этой сетке'),
        ),
        migrations.AddField(
            model_name='blocktowercoverage',
            name='towercoverage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='city_grid.towercoverage'),
        ),
        migrations.AddField(
            model_name='block',
            name='city_grid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to='city_grid.citygrid'),
        ),
    ]
